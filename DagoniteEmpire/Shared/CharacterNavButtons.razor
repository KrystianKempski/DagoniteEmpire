@using Microsoft.AspNetCore.SignalR.Client
@inject IChatManager _chatManager
@inject IJSRuntime _jsRuntime
@inject ISnackbar _snackBar
@inject NavigationManager _navigationManager;
@inject IUserService _userService

@attribute [Authorize(Roles = SD.Role_Admin + "," + SD.Role_HeroPlayer + "," + SD.Role_DukePlayer + "," + SD.Role_GameMaster)]


<MudButton OnClick="GoToClass" Style="@($"color:{Colors.Grey.Lighten5}; background:{Colors.Grey.Darken4};")" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary">
    <img src="@MyIcon.Anvil_white" width="25px" height="24px" class="anvil-icon" />
    Class
</MudButton>
<MudButton OnClick="GoToCharacter" Style="@($"color:{Colors.Grey.Lighten5}; background:{Colors.Grey.Darken4};")" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary">
    <img src="@MyIcon.Helm_white" width="25px" height="24px" class="helm-icon" />
    Character
</MudButton>


@code {

    public UserInfo? UserInfo { get; set; }


    private async Task GoToClass()
    {
        try
        {

            UserInfo = await _userService.GetUserInfo();

            if (UserInfo is not null && UserInfo.SelectedCharacterId > 0)
            {
                string classLink = "/profession/" + UserInfo.SelectedCharacterId;
                _navigationManager.NavigateTo(classLink);
            }
            else
            {
                _snackBar.Add("No character have yet been approved and selected as main", Severity.Info);
            }
        }
        catch (Exception e)
        {
            _snackBar.Add("Uknnown error", Severity.Error);
        }

    }

    private async Task GoToCharacter()
    {
        try
        {
            UserInfo = await _userService.GetUserInfo();

            if (UserInfo is not null && UserInfo.SelectedCharacterId > 0)
            {
                string characterLink = "/character/edit/" + UserInfo.SelectedCharacterId;

                _navigationManager.NavigateTo(characterLink);
            }
            else
            {
                _snackBar.Add("No character have yet been approved and selected as main", Severity.Info);
            }
        }
        catch (Exception e)
        {
            _snackBar.Add("Uknnown error", Severity.Error);
        }

    }

}

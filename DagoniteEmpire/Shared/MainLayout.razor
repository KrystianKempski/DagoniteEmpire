@using DA_Business.Services
@using Microsoft.AspNetCore.SignalR.Client
@inject ISnackbar _snackBar
@inject IJSRuntime _jsRuntime
@inject IUserService _userService
@inherits LayoutComponentBase

<PageTitle>DagoniteEmpire</PageTitle>

<MudThemeProvider/>
<MudPopoverProvider />
<MudDialogProvider 
    FullWidth="true" 
    MaxWidth="MaxWidth.Large" />
<MudSnackbarProvider />    


<MudLayout >
    <MudAppBar Style="@($"color:{Colors.Gray.Lighten5}; background:{Colors.Gray.Darken4};")" Elevation="1">
        <MudHidden Breakpoint="Breakpoint.LgAndUp" Invert="true">
            <MudButton Class="p-0 m-0" Style="@($"color:{Colors.Gray.Lighten5}; background:{Colors.Gray.Darken4}; font-family: 'Eagle Lake', serif; font-size: 20px;")" Variant="Variant.Text" DropShadow="true" Color="Color.Primary" Href="#">Dagonite Empire</MudButton>
            <div class="justify-center mud-text-align-center">
                <AuthorizeView>
                    <Authorized>
                        <CharacterNavButtons></CharacterNavButtons>
                    </Authorized>
                </AuthorizeView>
            </div> 
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndDown" Invert="true">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerStartToggle())" />
            <MudButton Style="@($"color:{Colors.Gray.Lighten5}; background:transparent; font-family: 'Eagle Lake', serif; font-size: 12px; padding: 6px;")" Variant="Variant.Text" DropShadow="true" Href="#">Dagonite Empire</MudButton>
        </MudHidden>
        <MudSpacer />
        <MudHidden Breakpoint="Breakpoint.MdAndDown" Invert="true">
            <MudIconButton Class="m-0 p-0" Icon="@Icons.Material.Filled.Chat" Color="Color.Inherit" OnClick="@ChatToggle" />
        </MudHidden>
        <LoginDisplay />
    </MudAppBar>
    <MudHidden Breakpoint="Breakpoint.MdAndDown" Invert="true">
        <CascadingValue Value="@_drawerOpen">
            <MudDrawer Style="@($"color:{Colors.Gray.Lighten5}; z-index:2000; background:{Colors.Gray.Darken4};")" @bind-Open="_drawerOpen" Elevation="1">
                <NavMenu OnDrawerChanged="DrawerChange" />
            </MudDrawer>
        </CascadingValue>
    </MudHidden>
    
    <MudContainer MaxWidth="MaxWidth.False" Class="m-0 p-0" Style="overflow:hidden; position:relative;">
        <AuthorizeView>
            <Authorized>
                <Chat ToggleChat="@OpenEnd"></Chat>
            </Authorized>
        </AuthorizeView>
    </MudContainer>    

    <MudMainContent >
            <CascadingValue Value="@UserInfo">     
                    @Body
            </CascadingValue>
    </MudMainContent>
    
</MudLayout>


@code {

    private MudTheme Theme = new MudTheme();
    public UserInfo UserInfo = new UserInfo();
    private bool OpenEnd { get; set; } = false;
    void DrawerStartToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    void ChatToggle()
    {
        OpenEnd = !OpenEnd;
    }

    bool _drawerOpen = false;

    protected override async Task OnInitializedAsync()
    {
        //await _userService.InitUserInfoAtStart();

    }   


    private async Task DrawerChange()
    {
        DrawerStartToggle();
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //await _userService.InitUserInfoAtStart();
        if (firstRender)
        {
        }
    }
}
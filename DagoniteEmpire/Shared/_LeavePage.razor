<div class="modal fade" data-backdrop="static" data-keyboard="false" id="leavePageModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm  leave</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close" @onclick="()=>OnLeaveConfirmation(false)">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body">
                Are you sure you want to leave? 
                Changes to character will not be saved
            </div>
            @if (IsParentComponentProcessing == true)
            {
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" disabled @onclick="()=>OnLeaveConfirmation(false)" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-danger" disabled @onclick="()=>OnLeaveConfirmation(true)">
                        Processing...
                    </button>
                </div>
            }
            else
            {
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="()=>OnLeaveConfirmation(false)" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-danger" @onclick="()=>OnLeaveConfirmation(true)">
                        Leave
                    </button>
                </div>
            }

        </div>
    </div>

</div>

@code {
    [Parameter]
    public bool IsParentComponentProcessing { get; set; }

    [Parameter]
    public EventCallback<bool> LeaveConfirmation { get; set; }

    private async Task OnLeaveConfirmation(bool isConfirmation)
    {
        if (isConfirmation)
            await LeaveConfirmation.InvokeAsync(isConfirmation);
    }

}


@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Choose human attribute and skills bonus
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudSelect @bind-Value="HumanRaceBonuses.AttributeNameBonus" Margin="Margin.Dense" T="string" Label="Attribute" Variant="Variant.Filled">
            @foreach (var attr in SD.Attributes.All)
            {
                <MudSelectItem Value="@(attr)" />
            }
        </MudSelect>
        <MudSelect @bind-Value="HumanRaceBonuses.FirstSkillNameBonus" Margin="Margin.Dense" T="string" Label="Base skill 1" Variant="Variant.Filled">
            @foreach (var bs in SD.BaseSkills.All)
            {
                <MudSelectItem Value="@(bs)" />
            }
        </MudSelect>
        <MudSelect @bind-Value="HumanRaceBonuses.SecondSkillNameBonus" Margin="Margin.Dense" T="string" Label="Base skill 2" Variant="Variant.Filled">
            @foreach (var bs in SD.BaseSkills.All)
            {
                <MudSelectItem Value="@(bs)" />
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="ChooseBonuses">Choose</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public HumanRaceModel HumanRaceBonuses { get; set; }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    protected override async Task OnInitializedAsync()
    {
        HumanRaceBonuses = new();

    }

    private void ChooseBonuses()
    {
        if (string.IsNullOrEmpty(HumanRaceBonuses.AttributeNameBonus))
        {
            Snackbar.Add("Choose attribute bonus", Severity.Warning);
            return;
        }
        if (string.IsNullOrEmpty(HumanRaceBonuses.FirstSkillNameBonus))
        {
            Snackbar.Add("Choose first skill bonus", Severity.Warning);
            return;
        }
        if (string.IsNullOrEmpty(HumanRaceBonuses.SecondSkillNameBonus))
        {
            Snackbar.Add("Choose second skill bonus", Severity.Warning);
            return;
        }
        if (HumanRaceBonuses.SecondSkillNameBonus == HumanRaceBonuses.FirstSkillNameBonus)
        {
            Snackbar.Add("Base skill bonuses cannot be the same", Severity.Warning);
            return;
        }
        MudDialog.Close(DialogResult.Ok(HumanRaceBonuses));

        Snackbar.Add("Bonuses added", Severity.Success);
    }
}

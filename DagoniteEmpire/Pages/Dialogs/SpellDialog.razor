@using DA_DataAccess.CharacterClasses
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <img src="@MyIcon.Scroll" width="40px" height="40px" class="pr-2" />
@*         <MudIcon Icon="@MyIcon.Scroll" Class="mr-3 mb-n1" /> *@
        @if (IsEdit)
        {
            <MudText Typo="Typo.h6">Edit Spell</MudText>
        }
        else
        {
            <MudText Typo="Typo.h6">Create Spell</MudText>
        }
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="@Spell.Name" Label="Spell name" />
        <MudTextField @bind-Value="@Spell.Link" Label="Link to spell" />
        <MudTextField @bind-Value="@Spell.Description" Label="Description" />
        @if (IsAdminOrMG)
        {
            <MudCheckBox @bind-Value="@Spell.IsApproved" Size="Size.Medium">Is Approved</MudCheckBox>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="SaveSpell">Save spell</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Spell Spell { get; set; }
    [Parameter]
    public bool IsEdit { get; set; }
    [Parameter]
    public bool IsAdminOrMG { get; set; }

    private void Cancel() => MudDialog.Cancel();

    private void SaveSpell()
    {
        if (string.IsNullOrEmpty(Spell.Name))
        {
            Snackbar.Add("Add Name of spell", Severity.Warning);
            return;
        }
        if (string.IsNullOrEmpty(Spell.Link))
        {
            Snackbar.Add("Add link to spell (from https://www.d20pfsrd.com/magic/spell-lists-and-domains)" , Severity.Warning);
            return;
        }
        if (string.IsNullOrEmpty(Spell.Name))
        {
            Snackbar.Add("Write short spell description", Severity.Warning);
            return;
        }

        MudDialog.Close(DialogResult.Ok(Spell));
    }
}
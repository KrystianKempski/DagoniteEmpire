@inject IJSRuntime _jsRuntime
@using MudBlazor
<div class="attribute">
    <MudPaper Class="p-2 m-0  w-100 h-100">

<div class="sheet-img">
    @* <img src="../images/old_paper2.png" class="stretch" /> *@
</div>
<h3 class="my-3 ml-3 text-center">ATTRIBUTES</h3>

<table class="table align-middle mb-1">
    <thead>
        <tr>
                    <th scope="col" class="bonus-row text-center"> <MudTooltip Placement="MudBlazor.Placement.Top" Text="Base">Base</MudTooltip></th>
                    <th scope="col" class="info-row text-center"> <MudTooltip Placement="MudBlazor.Placement.Top" Text="Race bonus"> Rc</MudTooltip></th>
                    <th scope="col" class="info-row text-center"><MudTooltip Placement="MudBlazor.Placement.Top" Text="Gear bonus">Gr</MudTooltip></th>
                    <th scope="col" class="info-row text-center"><MudTooltip Placement="MudBlazor.Placement.Top" Text="Trait bonus">Tr</MudTooltip></th>
                    <th scope="col" class="info-row text-center"> <MudTooltip Placement="MudBlazor.Placement.Top" Text="Other bonuses">Ot</MudTooltip></th>
                    <th scope="col" class="info-row text-center"><MudTooltip Placement="MudBlazor.Placement.Top" Text="Health bonus"> Ht</MudTooltip></th>
                    <th scope="col" class="info-row text-center"><MudTooltip Placement="MudBlazor.Placement.Top" Text="Temporary bonuses">Tp</MudTooltip></th>
                    <th scope="col" class="sum-row text-center"> <MudTooltip Placement="MudBlazor.Placement.Top" Text="Sum of all bonuses"> Sum</MudTooltip></th>
                    <th scope="col" class="sum-row text-center"><MudTooltip Placement="MudBlazor.Placement.Top" Text="Modyfier of attribute">Mod.</MudTooltip></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var obj in AllParams.Attributes.GetAllArray())
        {
            <tr>
                <td class="name-row" colspan="6">
                    <label class="names-label text-start">@obj.Name.ToUpper()</label>
                </td>
            </tr>
            <tr>

                <td>
                    <div class="attr-control">
                        <span class="attr-indicator">@obj.BaseBonus</span>
                            @if (AllParams.Character.CurrentExpPoints > 0 || AllParams.Character.IsApproved == false)
                            {
                                <div class="arrows">
                                    <button @onclick="@(()=>IncrAttr(obj))" class="attr-carret"><i class="fa-regular fa-square-caret-up align-top"></i></button>
                                    <button @onclick="@(()=>DecrAttr(obj))" class="attr-carret"><i class="fa-regular fa-square-caret-down align-top"></i></button>
                                </div>
                            }
                    </div>
                </td>
                <td>
                    <div class="attr-control">
                        <span class="info-indicator">@obj.RaceBonus</span>
                    </div>
                </td>
                <td>
                    <div class="attr-control">
                        <span class="info-indicator">@obj.GearBonus</span>
                    </div>
                </td>
                <td>
                    <div class="attr-control">
                        <span class="info-indicator">@obj.TraitBonus</span>
                    </div>
                </td>
                <td>
                    <div class="attr-control">
                        <span class="info-indicator">@obj.OtherBonuses</span>
                    </div>
                </td>
                <td>
                    <div class="attr-control">
                        <span class="info-indicator">@obj.HealthBonus</span>
                    </div>
                </td>
                <td>
                    <div class="attr-control">
                        <span class="info-indicator">@obj.TempBonuses</span>
                    </div>
                </td>
                <td>
                    <div class="attr-control">
                            <span class="sum-indicator">@obj.SumBonus</span>
                    </div>
                </td>
                <td>
                    <div class="attr-control">
                        <span class="sum-indicator">@obj.Modifier </span>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
</MudPaper>
</div>


@code {

    [CascadingParameter]
    public AllParamsModel AllParams { get; set; }

    [Parameter]
    public EventCallback OnAttributesChange { get; set; }


    private async Task IncrAttr(AttributeDTO obj)
    {
        var result = AllParams.Attributes.IncrAttr(obj);

        if (string.IsNullOrEmpty(result) == false)
        {
            await _jsRuntime.AttrLimit(result);
        }
        else
        {
            await OnAttributesChange.InvokeAsync();
        }
    }
    private async Task DecrAttr(AttributeDTO obj)
    {
        if (AllParams.Character.IsApproved == true)
        {
            await _jsRuntime.AttrLimit("To revert changes refresh page without saving");
            return;
        }
        var result = AllParams.Attributes.DecrAttr(obj);

        if (string.IsNullOrEmpty(result) == false)
        {
            await _jsRuntime.AttrLimit(result);
        }
        else
        {
            await OnAttributesChange.InvokeAsync();
        }
    }
}
